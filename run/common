#!/bin/sh

# paths
#   walk up to find package.json @ ROOT
PWD=$(pwd)

cd `dirname $0`
while [[ ! -e "package.json" ]]; do cd ..; done
ROOT=$(pwd)

NODE_BIN=$ROOT/node_modules/.bin

JS_DIRS="app/ app.js config/ index.js lib/ run/ test/ views/"

# colors
C_INFO="\033[97;40m"
C_OK="\033[97;42m"
C_ERR="\033[97;41m"
C_WARN="\033[97;43m"
C_CLOSE="\033[0m"

# logging and resolution
function INFO () {
    echo "$C_INFO INFO $C_CLOSE $1"
}
function WARN () {
    echo "$C_WARN WARN $C_CLOSE $1"
}
function FAIL () {
    echo "$C_ERR FAIL $C_CLOSE $1"
    cd $PWD
    exit 1
}
function SUCCEED () {
    echo "$C_OK  OK  $C_CLOSE $1"
    cd $PWD
    exit 0
}

#
# EXIT_OR_FORCE <WORD> [<EXITCODE>]
#   WORD = stub which must be entered from console to force
#   EXITCODE = assumed 1
#   `FORCE=true EXIT_OR_FORCE ...` => WASFORCED=1
#   stub entered => WASFORCED=2
#
WASFORCED=0
function EXIT_OR_FORCE() {
    WASFORCED=0

    local WORD=$1
    local EXITCODE=$2
    if [ "$EXITCODE" == "" ]; then
        EXITCODE=1
    fi

    if [ 0 -eq $EXITCODE ]; then
        return
    fi

    if [ "$FORCE" == "true" ]; then
        WAS_FORCED=1
        return
    fi

    # ensure TTY interaction during read
    exec < /dev/tty
    local REQUIRED=$WORD-$(expr $RANDOM % 10)
    read -p "Enter '$REQUIRED' to continue: " ENTERED
    exec <&-

    if [ "$ENTERED" == "$REQUIRED" ]; then
        WAS_FORCED=2
        return
    fi

    exit $EXITCODE
}
